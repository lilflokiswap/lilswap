{"version":3,"sources":["../node_modules/lodash/isEmpty.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","utils/truncateWalletAddress.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","views/Voting/helpers.ts","views/Voting/config.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/BreadcrumbLink.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx"],"names":["baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","value","splice","length","tag","size","key","call","BaseLabel","styled","label","theme","colors","text","Label","SecondaryLabel","FormError","children","color","mb","FormErrors","errors","mt","map","error","Choice","onRemove","onTextInput","props","useState","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","currentTarget","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","choices","t","useTranslation","hasMinimumChoices","filter","choice","as","scale","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","block","onDismiss","modalIsOpen","setModalIsOpen","useGetVotingPower","isLoading","total","cakeBalance","dexTokenVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","useTheme","title","headerBackground","gradients","cardHeader","width","height","alignItems","justifyContent","DetailsView","EasyMde","lazy","CreateProposal","name","body","times","startDate","startTime","endDate","endTime","snapshot","state","setState","setIsLoading","fieldsState","setFieldsState","account","useWeb3React","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","startDateTimestamp","getFormErrors","handleSubmit","a","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","signMessage","sig","msg","address","sendSnaphotData","data","ipfsHash","message","console","updateValue","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMIN_ADDRESS","useEffect","Container","py","BreadcrumbLink","to","onSubmit","Layout","htmlFor","inputName","required","onTextChange","p","px","ReactMarkdown","DatePicker","selected","placeholderText","mr","href","getBscScanLink","truncateWalletAddress","endIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","startLength","endLength","substring","estimateGas","contract","methodName","methodArgs","gasMarginPer10000","Error","rawGasEstimation","gasEstimation","mul","ethers","BigNumber","from","add","div","callWithEstimateGas","gasLimit","tx","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pid","amount","DEFAULT_TOKEN_DECIMAL","toString","enterStaking","wait","receipt","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","pools","pool","sousId","isFinished","simpleRpcProvider","getBlockNumber","blockNumber","startBlockCalls","contractAddress","getAddress","endBlockCalls","multicall","sousChefV2","startBlocks","endBlocks","reduce","accum","poolCheck","startBlock","endBlock","gte","lte","isCoreProposal","author","toLowerCase","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","plugins","network","strategies","params","symbol","getCakeAddress","decimals","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANLILFLOKI_SPACE","fetch","SNAPSHOT_HUB_API","method","headers","Accept","response","ok","json","error_description","getVotingPower","poolAddresses","SNAPSHOT_VOTING_API","calculateVoteResults","votes","vote","choiceText","getTotalFromVotes","power","votingPower","plus","BIG_ZERO","PROPOSALS_TO_SHOW","IPFS_GATEWAY","VotingBox","cardBorder","ModalInner","maxWidth","Link","primaryBright","mediaQueries","lg","fontSize","textTransform","bold","toFormat","textAlign","initialState","verificationHash","isActive","setVotingPower","prevVotingPower","fetchVotingPower","Table","table","ThemedComponent","Title","my","markdownComponents","h1","h2","h3","h4","h5","h6","ol","ul","pre","remarkPlugins","gfm","components"],"mappings":"gHAAA,IAAIA,EAAWC,EAAQ,KACnBC,EAASD,EAAQ,KACjBE,EAAcF,EAAQ,KACtBG,EAAUH,EAAQ,KAClBI,EAAcJ,EAAQ,KACtBK,EAAWL,EAAQ,KACnBM,EAAcN,EAAQ,KACtBO,EAAeP,EAAQ,KAUvBQ,EAHcC,OAAOC,UAGQF,eA2DjCG,EAAOC,QAxBP,SAAiBC,GACf,GAAa,MAATA,EACF,OAAO,EAET,GAAIT,EAAYS,KACXV,EAAQU,IAA0B,iBAATA,GAA4C,mBAAhBA,EAAMC,QAC1DT,EAASQ,IAAUN,EAAaM,IAAUX,EAAYW,IAC1D,OAAQA,EAAME,OAEhB,IAAIC,EAAMf,EAAOY,GACjB,GApDW,gBAoDPG,GAnDO,gBAmDUA,EACnB,OAAQH,EAAMI,KAEhB,GAAIX,EAAYO,GACd,OAAQd,EAASc,GAAOE,OAE1B,IAAK,IAAIG,KAAOL,EACd,GAAIL,EAAeW,KAAKN,EAAOK,GAC7B,OAAO,EAGX,OAAO,I,+TCrEHE,EAAYC,IAAOC,MAAV,0GACJ,qBAAGC,MAAkBC,OAAOC,QAM1BC,EAAQL,YAAOD,EAAPC,CAAH,gDAILM,EAAiBN,YAAOD,EAAPC,CAAH,8EAKdO,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjC,cAAC,KAAD,CAAMC,MAAM,UAAUC,GAAG,MAAzB,SACGF,KAIQG,EAA6C,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3D,OACE,cAAC,IAAD,CAAKC,GAAG,MAAR,SACGD,EAAOE,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,UAAwBA,GAARA,S,+DCIhBC,EA1BuB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAgBC,EAAY,iBAC7E,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAUA,OACE,eAAC,IAAD,CAAKC,SAAS,WAAWf,GAAG,OAA5B,UACE,cAAC,KAAD,2BAAWS,GAAX,IAAkBO,SAVD,SAACC,GACpB,IAAQnC,EAAUmC,EAAIC,cAAdpC,MAER8B,EAAaC,GAA4B,IAAjB/B,EAAME,QAC9B8B,GAAW,GACXN,EAAY1B,IAKgC6B,UAAWA,KACpDJ,GACC,cAAC,IAAD,CAAKQ,SAAS,WAAWI,MAAM,MAAMC,IAAI,MAAMC,OAAQ,GAAvD,SACE,cAAC,IAAD,CAAYC,QAAQ,OAAOC,QAAShB,EAApC,SACE,cAAC,IAAD,YCTCiB,EAAa,iBAAe,CAAEC,GAAIC,MAAY5C,MAAO,KAoDnD6C,EAlDyB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASZ,EAAe,EAAfA,SAC1Ca,EAAMC,cAAND,EACFE,EAAoBH,EAAQI,QAAO,SAACC,GAAD,OAAYA,EAAOnD,MAAME,OAAS,KAAGA,QALjD,EAW7B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASkD,GAAG,KAAKC,MAAM,KAAvB,SACGN,EAAE,eAGP,eAAC,IAAD,WACGD,EAAQxB,KAAI,WAAgBgC,GAAW,IAAxBX,EAAuB,EAAvBA,GAAI3C,EAAmB,EAAnBA,MAclB,OACE,cAAC,EAAD,CAEEqD,MAAM,KACN3B,YAjBoB,SAAC6B,GACvB,IAAMC,EAAU,YAAOV,GACjBW,EAAcD,EAAWE,WAAU,SAACC,GAAD,OAAeA,EAAUhB,KAAOA,KAEzEa,EAAWC,GAAazD,MAAQuD,EAEhCrB,EAASsB,IAYPI,YAAab,EAAE,qBACf/C,MAAOA,EACPyB,SAAU6B,EAAQ,EAXD,WACnBpB,EAASY,EAAQI,QAAO,SAACW,GAAD,OAAmBA,EAAclB,KAAOA,YAUzBmB,GALhCnB,MAUX,cAAC,IAAD,CAAQoB,KAAK,SAAStB,QAtCV,WAChBP,EAAS,GAAD,mBAAKY,GAAL,CAAcJ,QAqCwBsB,UAAWf,EAArD,SACGF,EAAE,uB,2BCzDAkB,GAAqB,SAACC,EAAYC,GAC7C,IAAKC,kBAAQF,KAAUE,kBAAQD,GAC7B,OAAO,KAGT,IAAME,EAAUC,kBAAOJ,EAAM,cACvBK,EAAUD,kBAAOH,EAAM,YAE7B,OAAOK,kBAAS,GAAD,OAAIH,EAAJ,YAAeE,IAAWE,UAAY,K,wCCqCxCC,GAvC2C,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC1D7B,EAAMC,cAAND,EACR,EAAsCnB,oBAAS,GAA/C,mBAAOiD,EAAP,KAAoBC,EAApB,KACA,EACEC,aAAkBJ,EAAOE,GADnBG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,qBAAsBC,EAA7D,EAA6DA,gBAAiBC,EAA9E,EAA8EA,aAAcC,EAA5F,EAA4FA,iBAEpF5E,EAAU6E,eAAV7E,MAOR,OACE,cAAC,KAAD,CAAO8E,MAAOzC,EAAE,gBAAiB6B,UANb,WACpBE,GAAe,GACfF,KAI2Da,iBAAkB/E,EAAMC,OAAO+E,UAAUC,WAApG,SACE,cAAC,IAAD,CAAKzE,GAAG,OAAO0E,MAAM,QAArB,SACGZ,EACC,cAAC,IAAD,CAAMa,OAAO,QAAQC,WAAW,SAASC,eAAe,SAAxD,SACE,cAAC,KAAD,CAAS3F,KAAM,OAGjB,qCACE,cAAC4F,GAAA,EAAD,CACEf,MAAOA,EACPC,YAAaA,EACbC,qBAAsBA,EACtBC,gBAAiBA,EACjBC,aAAcA,EACdC,iBAAkBA,IAEpB,cAAC,IAAD,CAAQ9C,QAAQ,YAAYC,QAASmC,EAAWgB,MAAM,OAAOvE,GAAG,OAAhE,SACG0B,EAAE,mBCCXkD,GAAUC,gBAAK,kBAAM,yDAqQZC,UAnQQ,WACrB,MAA0BvE,mBAAoB,CAC5CwE,KAAM,GACNC,KAAM,GACNvD,QAASwD,IHhCkB,GGgCKhF,IAAIoB,GACpC6D,UAAW,KACXC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,SAAU,IARZ,mBAAOC,EAAP,KAAcC,EAAd,KAUA,EAAkCjF,oBAAS,GAA3C,mBAAOoD,EAAP,KAAkB8B,EAAlB,KACA,EAAsClF,mBAAqC,IAA3E,mBAAOmF,EAAP,KAAoBC,EAApB,KACQjE,EAAMC,cAAND,EACAkE,EAAYC,cAAZD,QACFE,EAAeC,cACbC,EAASC,cAATD,KACAE,EAAYC,cAAZD,QACR,EAAqCE,cAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACtB,GAAoCC,aAAS,cAAC,GAAD,CAAkBjD,MAAOiC,EAAMD,YAArEkB,GAAP,qBACQzB,GAA0EQ,EAA1ER,KAAMC,GAAoEO,EAApEP,KAAMvD,GAA8D8D,EAA9D9D,QAASyD,GAAqDK,EAArDL,UAAWC,GAA0CI,EAA1CJ,UAAWC,GAA+BG,EAA/BH,QAASC,GAAsBE,EAAtBF,QAASC,GAAaC,EAAbD,SAC/DmB,GFjDqB,SAACC,EAAqBhF,GACjD,IAAQqD,EAA0E2B,EAA1E3B,KAAMC,EAAoE0B,EAApE1B,KAAMvD,EAA8DiF,EAA9DjF,QAASyD,EAAqDwB,EAArDxB,UAAWC,EAA0CuB,EAA1CvB,UAAWC,EAA+BsB,EAA/BtB,QAASC,EAAsBqB,EAAtBrB,QAASC,EAAaoB,EAAbpB,SAC/DvF,EAAsC,GAEvCgF,IACHhF,EAAOgF,KAAO,CAACrD,EAAE,sBAAuB,CAAEiF,MAAO,YAG9C3B,IACHjF,EAAOiF,KAAO,CAACtD,EAAE,sBAAuB,CAAEiF,MAAO,WAG/ClF,EAAQ5C,ODZiB,ICa3BkB,EAAO0B,QAAU,CAACC,EAAE,2CAA4C,CAAEkF,IDbvC,MCgB7B,IAAMC,EAAiBpF,EAAQqF,MAAK,SAAChF,GAAD,OAAaA,EAAOnD,SDhB3B,ICiBzB8C,EAAQ5C,QAA8BgI,IACxC9G,EAAO0B,QAAUsF,MAAM9I,QAAQ8B,EAAO0B,SAArB,sBACT1B,EAAO0B,SADE,CACOC,EAAE,+BACrB3B,EAAO0B,QAAU,CAACC,EAAE,+BAGtBqB,kBAAQmC,KACXnF,EAAOmF,UAAY,CAACxD,EAAE,gCAGnBqB,kBAAQoC,KACXpF,EAAOoF,UAAY,CAACzD,EAAE,gCAGnBqB,kBAAQqC,KACXrF,EAAOqF,QAAU,CAAC1D,EAAE,gCAGjBqB,kBAAQsC,KACXtF,EAAOsF,QAAU,CAAC3D,EAAE,gCAGtB,IAAMsF,EAAqBpE,GAAmBsC,EAAWC,GAazD,OAZyBvC,GAAmBwC,EAASC,GAE9B2B,IACrBjH,EAAOqF,QAAU2B,MAAM9I,QAAQ8B,EAAOqF,SAArB,sBACTrF,EAAOqF,SADE,CACO1D,EAAE,2CACrB3B,EAAOqF,QAAU,CAAC1D,EAAE,2CAGV,IAAb4D,IACFvF,EAAOuF,SAAW,CAAC5D,EAAE,sBAGhB3B,EEHYkH,CAAc1B,EAAO7D,GAElCwF,GAAY,uCAAG,WAAOpG,GAAP,qBAAAqG,EAAA,6DACnBrG,EAAIsG,iBADe,SAIjB3B,GAAa,GACP4B,EAAWC,KAAKC,UAAL,2BACZC,eADY,IAEf9E,KAAM+E,IAAgBC,SACtBC,QAAS,CACP5C,QACAC,QACAM,YACAsC,MAAOhF,GAAmBsC,GAAWC,IACrC0C,IAAKjF,GAAmBwC,GAASC,IACjC5D,QAASA,GACNI,QAAO,SAACC,GAAD,OAAYA,EAAOnD,SAC1BsB,KAAI,SAAC6B,GACJ,OAAOA,EAAOnD,SAElBmJ,SAAUC,cACVrF,KAAM,oBApBO,SAwBCsF,YAAY9B,EAASN,EAASyB,GAxB/B,YAwBXY,EAxBW,gCA2BTC,EAAe,CAAEC,QAASvC,EAASsC,IAAKb,EAAUY,OA3BzC,UA8BIG,YAAgBF,GA9BpB,QA8BTG,EA9BS,OAiCfrC,EAAK,oBAAD,OAAqBqC,EAAKC,WAE9BjC,EAAa3E,EAAE,sBAnCA,wBAqCf4E,EAAW5E,EAAE,SAAUA,EAAE,2BArCV,0DAwCjB4E,EAAW5E,EAAE,UAAU,uCAAO6G,WAAP,kCAAkB,KAAOrI,QAChDsI,QAAQtI,MAAR,MACAuF,GAAa,GA1CI,0DAAH,sDA8CZgD,GAAc,SAACzJ,EAAaL,GAChC6G,GAAS,SAACkD,GAAD,mBAAC,eACLA,GADI,kBAEN1J,EAAML,OAITgH,GAAe,SAACgD,GAAD,mBAAC,eACXA,GADU,kBAEZ3J,GAAM,QAiBL4J,GAAmB,SAAC5J,GAAD,OAAiB,SAACL,GACzC8J,GAAYzJ,EAAKL,KAGbkK,GAAUC,mBACd,iBAAO,CACLC,UAAWnD,IAAYoD,KAAgB,GAAK,CAAC,QAAS,aAAc,UAAW,eAAgB,YAEjG,CAACpD,IAYH,OATAqD,qBAAU,WACJnD,EAAe,GACjBN,GAAS,SAACkD,GAAD,mBAAC,eACLA,GADI,IAEPpD,SAAUQ,SAGb,CAACA,EAAcN,IAGhB,eAAC0D,EAAA,EAAD,CAAWC,GAAG,OAAd,UACE,cAAC,IAAD,CAAKtJ,GAAG,OAAR,SACE,eAAC,IAAD,WACE,cAACuJ,EAAA,EAAD,CAAgBC,GAAG,IAAnB,SAAwB3H,EAAE,UAC1B,cAAC0H,EAAA,EAAD,CAAgBC,GAAG,UAAnB,SAA8B3H,EAAE,YAChC,cAAC,KAAD,UAAOA,EAAE,0BAGb,sBAAM4H,SAAUpC,GAAhB,SACE,eAACqC,EAAA,EAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAK1J,GAAG,OAAR,UACE,cAACL,EAAD,CAAOgK,QAAQ,OAAf,SAAuB9H,EAAE,WACzB,cAAC,KAAD,CAAOJ,GAAG,OAAOyD,KAAK,OAAOpG,MAAOoG,GAAM/C,MAAM,KAAKnB,SA/C5C,SAACC,GACpB,MAAmCA,EAAIC,cAAzB0I,EAAd,EAAQ1E,KAAiBpG,EAAzB,EAAyBA,MACzB8J,GAAYgB,EAAW9K,IA6CgE+K,UAAQ,IACpFjD,GAAW1B,MAAQW,EAAYX,MAAQ,cAAC,EAAD,CAAYhF,OAAQ0G,GAAW1B,UAEzE,eAAC,IAAD,CAAKlF,GAAG,OAAR,UACE,cAACL,EAAD,CAAOgK,QAAQ,OAAf,SAAuB9H,EAAE,aACzB,cAAC,KAAD,CAAM9B,MAAM,aAAaC,GAAG,MAA5B,SACG6B,EAAE,6BAEL,cAACkD,GAAD,CACEtD,GAAG,OACHyD,KAAK,OACL4E,aArDc,SAAChL,GAC3B8J,GAAY,OAAQ9J,IAqDRA,MAAOqG,GACP6D,QAASA,GACTa,UAAQ,IAETjD,GAAWzB,MAAQU,EAAYV,MAAQ,cAAC,EAAD,CAAYjF,OAAQ0G,GAAWzB,UAExEA,IACC,cAAC,IAAD,CAAKnF,GAAG,OAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASkC,GAAG,KAAKC,MAAM,KAAvB,SACGN,EAAE,eAGP,cAAC,IAAD,CAAUkI,EAAE,IAAIC,GAAG,OAAnB,SACE,cAACC,EAAA,EAAD,UAAgB9E,YAKxB,cAAC,EAAD,CAASvD,QAASA,GAASZ,SAtEV,SAACsB,GAC1BsG,GAAY,UAAWtG,MAsEdsE,GAAWhF,SAAWiE,EAAYjE,SAAW,cAAC,EAAD,CAAY1B,OAAQ0G,GAAWhF,aAE/E,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASM,GAAG,KAAKC,MAAM,KAAvB,SACGN,EAAE,eAGP,eAAC,IAAD,WACE,eAAC,IAAD,CAAK7B,GAAG,OAAR,UACE,cAACJ,EAAD,UAAiBiC,EAAE,gBACnB,cAACqI,EAAA,EAAD,CACEhF,KAAK,YACLlE,SAAU+H,GAAiB,aAC3BoB,SAAU9E,GACV+E,gBAAgB,eAEjBxD,GAAWvB,WAAaQ,EAAYR,WAAa,cAAC,EAAD,CAAYnF,OAAQ0G,GAAWvB,eAEnF,eAAC,IAAD,CAAKrF,GAAG,OAAR,UACE,cAACJ,EAAD,UAAiBiC,EAAE,gBACnB,cAAC,IAAD,CACEqD,KAAK,YACLlE,SAAU+H,GAAiB,aAC3BoB,SAAU7E,GACV8E,gBAAgB,UAEjBxD,GAAWtB,WAAaO,EAAYP,WAAa,cAAC,EAAD,CAAYpF,OAAQ0G,GAAWtB,eAEnF,eAAC,IAAD,CAAKtF,GAAG,OAAR,UACE,cAACJ,EAAD,UAAiBiC,EAAE,cACnB,cAACqI,EAAA,EAAD,CACEhF,KAAK,UACLlE,SAAU+H,GAAiB,WAC3BoB,SAAU5E,GACV6E,gBAAgB,eAEjBxD,GAAWrB,SAAWM,EAAYN,SAAW,cAAC,EAAD,CAAYrF,OAAQ0G,GAAWrB,aAE/E,eAAC,IAAD,CAAKvF,GAAG,OAAR,UACE,cAACJ,EAAD,UAAiBiC,EAAE,cACnB,cAAC,IAAD,CACEqD,KAAK,UACLlE,SAAU+H,GAAiB,WAC3BoB,SAAU3E,GACV4E,gBAAgB,UAEjBxD,GAAWpB,SAAWK,EAAYL,SAAW,cAAC,EAAD,CAAYtF,OAAQ0G,GAAWpB,aAE9EO,GACC,eAAC,IAAD,CAAMnB,WAAW,SAAS5E,GAAG,MAA7B,UACE,cAAC,KAAD,CAAMD,MAAM,aAAasK,GAAG,OAA5B,SACGxI,EAAE,aAEL,cAAC,KAAD,CAAcyI,KAAMC,YAAexE,EAAS,WAA5C,SACGyE,YAAsBzE,QAI7B,eAAC,IAAD,CAAMnB,WAAW,SAAS5E,GAAG,OAA7B,UACE,cAAC,KAAD,CAAMD,MAAM,aAAasK,GAAG,OAA5B,SACGxI,EAAE,cAEL,cAAC,KAAD,CAAcyI,KAAMC,YAAe9E,GAAU,SAA7C,SAAwDA,QAEzDM,EACC,qCACE,cAAC,IAAD,CACElD,KAAK,SACL6B,MAAM,OACNZ,UAAWA,EACX2G,QAAS3G,EAAY,cAAC,IAAD,CAAe4G,MAAI,EAAC3K,MAAM,iBAAoB,KACnE+C,UAAW6H,IAAQ/D,IACnB5G,GAAG,OANL,SAQG6B,EAAE,aAEL,eAAC,KAAD,CAAM9B,MAAM,UAAUmC,GAAG,IAAIlC,GAAG,MAAhC,UACG6B,EAAE,gEAAiE,CAAE+I,MAAOC,OAAmB,OAElG,cAAC,IAAD,CAAQ1I,MAAM,KAAKU,KAAK,SAASvB,QAAQ,OAAOC,QAASoF,GAA2BoD,EAAG,EAAvF,SACGlI,EAAE,2BAIP,cAACiJ,EAAA,EAAD,CAAqBpG,MAAM,OAAO7B,KAAK,6B,iCC7R1C2H,IAJe,SAAClC,GAAqD,IAApCyC,EAAmC,uDAArB,EAAGC,EAAkB,uDAAN,EAC3E,MAAM,GAAN,OAAU1C,EAAQ2C,UAAU,EAAGF,GAA/B,cAAiDzC,EAAQ2C,UAAU3C,EAAQtJ,OAASgM,M,uPCMzEE,EAAW,uCAAG,WACzBC,EACAC,EACAC,EACAC,GAJyB,mBAAAhE,EAAA,yDAMpB6D,EAASC,GANW,sBAOjB,IAAIG,MAAJ,iBAAoBH,EAApB,6BAAmDD,EAAS7C,UAP3C,wBASM,EAAA6C,EAASD,aAAYE,GAArB,oBAAoCC,IAT1C,cASnBG,EATmB,OAWnBC,EAAgBD,EACnBE,IAAIC,IAAOC,UAAUC,KAAK,KAAOC,IAAIH,IAAOC,UAAUC,KAAKP,KAC3DS,IAAIJ,IAAOC,UAAUC,KAAK,MAbJ,kBAclBJ,GAdkB,2CAAH,4DAwBXO,EAAmB,uCAAG,WACjCb,EACAC,GAFiC,iCAAA9D,EAAA,6DAGjC+D,EAHiC,+BAGb,GACpBC,EAJiC,+BAIb,IAEdG,EAAgBP,EAAYC,EAAUC,EAAYC,EAAYC,GANnC,SAOhBH,EAASC,GAAT,MAAAD,EAAQ,YAAgBE,GAAhB,QAA4B,CACnDY,SAAUR,MARqB,cAO3BS,EAP2B,yBAU1BA,GAV0B,2CAAH,wD,yBC/B1BlD,EAAU,CACdiD,SAAUE,KAGCC,EAAS,uCAAG,WAAOC,EAAoBC,EAAKC,GAAhC,uBAAAjF,EAAA,yDACjBxI,EAAQ,IAAI8M,IAAUW,GAAQnH,MAAMoH,KAAuBC,WACrD,IAARH,EAFmB,gCAGJD,EAAmBK,aAAa5N,EAAOkK,GAHnC,cAGfkD,EAHe,gBAICA,EAAGS,OAJJ,cAIfC,EAJe,yBAKdA,EAAQC,QALM,wBAQNR,EAAmBS,QAAQR,EAAKxN,EAAOkK,GARjC,eAQjBkD,EARiB,iBASDA,EAAGS,OATF,eASjBC,EATiB,yBAUhBA,EAAQC,QAVQ,4CAAH,0DAaTE,EAAW,uCAAG,WAAOV,EAAoBC,EAAKC,GAAhC,uBAAAjF,EAAA,yDACnBxI,EAAQ,IAAI8M,IAAUW,GAAQnH,MAAMoH,KAAuBC,WACrD,IAARH,EAFqB,gCAGND,EAAmBW,aAAalO,EAAOkK,GAHjC,cAGjBkD,EAHiB,gBAIDA,EAAGS,OAJF,cAIjBC,EAJiB,yBAKhBA,EAAQC,QALQ,wBAQRR,EAAmBY,SAASX,EAAKxN,EAAOkK,GARhC,eAQnBkD,EARmB,iBASHA,EAAGS,OATA,eASnBC,EATmB,yBAUlBA,EAAQC,QAVU,4CAAH,0DAaXK,EAAW,uCAAG,WAAOb,EAAoBC,GAA3B,qBAAAhF,EAAA,yDACb,IAARgF,EADqB,gCAEAD,EAAmBW,aAAa,IAAKhE,GAFrC,cAEjBkD,EAFiB,gBAGDA,EAAGS,OAHF,cAGjBC,EAHiB,yBAIhBA,EAAQC,QAJQ,wBAORR,EAAmBS,QAAQR,EAAK,IAAKtD,GAP7B,eAOnBkD,EAPmB,iBAQHA,EAAGS,OARA,eAQnBC,EARmB,yBASlBA,EAAQC,QATU,4CAAH,wD,yCCtBXM,EAAc,uCAAG,WAAO1J,GAAP,yBAAA6D,EAAA,yDACtB8F,EAAgBC,IACnBrL,QAAO,SAACsL,GAAD,OAA0B,IAAhBA,EAAKC,UACtBvL,QAAO,SAACsL,GAAD,OAA8B,IAApBA,EAAKE,iBAA4C5K,IAApB0K,EAAKE,cAH1B,KAIR/J,EAJQ,qCAIQgK,IAAkBC,iBAJ1B,iCAItBC,EAJsB,KAKtBC,EAAkBR,EAAchN,KAAI,gBAAGyN,EAAH,EAAGA,gBAAH,MAA0B,CAClEvF,QAASwF,YAAWD,GACpB3I,KAAM,iBAEF6I,EAAgBX,EAAchN,KAAI,gBAAGyN,EAAH,EAAGA,gBAAH,MAA0B,CAChEvF,QAASwF,YAAWD,GACpB3I,KAAM,oBAXoB,UAaF8I,YAAUC,EAAYL,GAbpB,eAatBM,EAbsB,iBAcJF,YAAUC,EAAYF,GAdlB,eActBI,EAdsB,yBAgBrBf,EAAcgB,QAAO,SAACC,EAAOC,EAAWlM,GAC7C,IAAMmM,EAAaL,EAAY9L,GAAS,IAAIwJ,IAAUsC,EAAY9L,IAAU,KACtEoM,EAAWL,EAAU/L,GAAS,IAAIwJ,IAAUuC,EAAU/L,IAAU,KAEtE,OAAKmM,GAAeC,EAIhBD,EAAWE,IAAId,IAAgBa,EAASE,IAAIf,GACvCU,EAGH,GAAN,mBAAWA,GAAX,CAAkBC,IAPTD,IAQR,KA7ByB,4CAAH,uD,0cCHdM,EAAiB,SAACnH,GAC7B,OAAOA,EAASoH,OAAOC,gBAAkB1F,IAAc0F,eAG5CC,EAAwB,SAACC,EAAuBC,GAC3D,OAAQA,GACN,KAAKC,IAAaC,UAChB,OAAOH,EAAU/M,QAAO,SAACwF,GAAD,OAAemH,EAAenH,MACxD,KAAKyH,IAAaE,KAChB,OAAOJ,EAAU/M,QAAO,SAACwF,GAAD,OAAcmH,EAAenH,MACvD,KAAKyH,IAAaG,IAClB,QACE,OAAOL,IAIAM,EAAyB,SAACN,EAAuBrJ,GAC5D,OAAOqJ,EAAU/M,QAAO,SAACwF,GAAD,OAAcA,EAAS9B,QAAUA,MAY9CwC,EAAmB,WAC9B,MAAO,CACLoH,QAAS,GACTC,QAAS,GACTC,WAAY,CAAC,CAAEtK,KAAM,UAAWuK,OAAQ,CAAEC,OAAQ,WAAYpH,QAASqH,cAAkBC,SAAU,QAO1FjI,EAAsB,WACjC,MAAO,CACLkI,QAASC,IACTC,WAAYC,KAAKC,MAAQ,KAAKC,UAC9BC,MAAOC,MAOE7H,EAAe,uCAAG,WAAOG,GAAP,mBAAApB,EAAA,sEACN+I,MAAMC,IAAkB,CAC7CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBtL,KAAMsC,KAAKC,UAAUgB,KAPM,WACvBgI,EADuB,QAUfC,GAVe,gCAWPD,EAASE,OAXF,aAWrBvQ,EAXqB,OAYrB,IAAIkL,MAAJ,OAAUlL,QAAV,IAAUA,OAAV,EAAUA,EAAOwQ,mBAZI,wBAeVH,EAASE,OAfC,eAevBpI,EAfuB,yBAgBtBA,GAhBsB,4CAAH,sDAmBfsI,EAAc,uCAAG,WAAO/K,EAAiBgL,EAAyBtN,GAAjD,mBAAA6D,EAAA,8DACR7D,EADQ,qCACQgK,IAAkBC,iBAD1B,iCACtBC,EADsB,cAEL0C,MAAM,GAAD,OAAIW,IAAJ,UAAiC,CAC3DT,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBrL,KAAMsC,KAAKC,UAAU,CACnBY,QAASvC,EACTtC,MAAOkK,EACPoD,oBAVwB,cAEtBL,EAFsB,iBAaTA,EAASE,OAbA,eAatBpI,EAbsB,yBAcrBA,EAAKA,MAdgB,4CAAH,0DAiBdyI,EAAuB,SAACC,GACnC,OAAOA,EAAM9C,QAAO,SAACC,EAAO8C,GAC1B,IAAMC,EAAaD,EAAK3J,SAAS5F,QAAQuP,EAAKlP,OAAS,GAEvD,OAAO,2BACFoM,GADL,kBAEG+C,EAAa/C,EAAM+C,GAAN,sBAAwB/C,EAAM+C,IAA9B,CAA2CD,IAAQ,CAACA,OAEnE,KAGQE,EAAoB,SAACH,GAChC,OAAOA,EAAM9C,QAAO,SAACC,EAAO8C,GAAU,IAAD,EAC7BG,EAAQ,IAAI1F,IAAJ,UAAcuF,EAAKlJ,gBAAnB,aAAc,EAAesJ,aAC3C,OAAOlD,EAAMmD,KAAKF,KACjBG,O,iCC9GL,4MAAO,IAAMC,EAAoB,GACpBvI,EAAgB,6CAChBwI,EAAe,+BACf7B,EAAmB,QACnBM,EAAoB,WACpBvF,EAAiB,I,sJCDjB+G,EAAYtS,IAAOyM,IAAV,wNAEA,qBAAGvM,MAAkBC,OAAOoS,cASrCC,EAAiC,SAACrR,GAC7C,OAAO,cAAC,IAAD,aAAKT,GAAG,OAAO+R,SAAS,SAAYtR,M,8DCbvC8I,EAAiBjK,YAAO0S,IAAP1S,CAAH,2CACT,qBAAGE,MAAkBC,OAAOwS,iBAGxB1I,O,+CCLTG,E,KAASpK,EAAOyM,IAAV,yLAMR,qBAAGvM,MAAkB0S,aAAaC,MAKvBzI,O,iCCbf,wCA8Ee5E,IA/DiC,SAAC,GAO1C,IANLf,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,iBAEQvC,EAAMC,cAAND,EAER,OACE,eAAC,IAAD,CAAY7B,GAAG,IAAf,UACE,cAAC,KAAD,CAAMkC,GAAG,IAAIlC,GAAG,OAAOoS,SAAS,OAAOrS,MAAM,aAA7C,SACG8B,EACC,6KAGJ,cAAC,KAAD,CAAM9B,MAAM,YAAYsS,cAAc,YAAYrS,GAAG,MAAMsS,MAAI,EAACF,SAAS,OAAzE,SACGvQ,EAAE,cAEL,eAAC,IAAD,WACE,cAAC,KAAD,CAAM9B,MAAM,YAAZ,SAAyB8B,EAAE,uBAC3B,cAAC,KAAD,CAAMyQ,MAAI,EAACF,SAAS,OAApB,SACGrO,EAAMwO,SAAS,QAGpB,cAAC,KAAD,CAAMxS,MAAM,YAAYsS,cAAc,YAAYrS,GAAG,MAAMsS,MAAI,EAACF,SAAS,OAAzE,SACGvQ,EAAE,wBAEL,eAAC,IAAD,CAAM+C,WAAW,SAASC,eAAe,gBAAgB7E,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMD,MAAM,aAAaqS,SAAS,OAAlC,SACGvQ,EAAE,YAEL,cAAC,KAAD,CAAM2Q,UAAU,QAAhB,SAAyBxO,EAAYuO,SAAS,QAEhD,eAAC,IAAD,CAAM3N,WAAW,SAASC,eAAe,gBAAgB7E,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMD,MAAM,aAAaqS,SAAS,OAAlC,SACGvQ,EAAE,0BAEL,cAAC,KAAD,CAAM2Q,UAAU,QAAhB,SAAyBtO,EAAgBqO,SAAS,QAEpD,eAAC,IAAD,CAAM3N,WAAW,SAASC,eAAe,gBAAgB7E,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMD,MAAM,aAAaqS,SAAS,OAAlC,SACGvQ,EAAE,wBAEL,cAAC,KAAD,CAAM2Q,UAAU,QAAhB,SAAyBvO,EAAqBsO,SAAS,QAEzD,eAAC,IAAD,CAAM3N,WAAW,SAASC,eAAe,gBAAgB7E,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMD,MAAM,aAAaqS,SAAS,OAAlC,SACGvQ,EAAE,iBAEL,cAAC,KAAD,CAAM2Q,UAAU,QAAhB,SAAyBrO,EAAaoO,SAAS,QAEjD,eAAC,IAAD,CAAM3N,WAAW,SAASC,eAAe,gBAAgB7E,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMD,MAAM,aAAaqS,SAAS,OAAlC,SACGvQ,EAAE,qBAEL,cAAC,KAAD,CAAM2Q,UAAU,QAAhB,SAAyBpO,EAAiBmO,SAAS,a,sJCrDrDE,EAAsB,CAC1BC,iBAAkB,KAClB1O,YAAayN,IACbxN,qBAAsBwN,IACtBvN,gBAAiBuN,IACjBtN,aAAcsN,IACdrN,iBAAkBqN,IAClB1N,MAAO0N,KAmDM5N,IAhDW,SAACJ,GAAqE,IAArDkP,IAAoD,yDAC7F,EAAoB3M,cAAZD,EAAR,EAAQA,QACR,EAAsCrF,mBAAS+R,GAA/C,mBAAOlB,EAAP,KAAoBqB,EAApB,KACA,EAAkClS,qBAAWqF,GAA7C,mBAAOjC,EAAP,KAAkB8B,EAAlB,KA0CA,OAxCAwD,qBAAU,WAmCJrD,GAAW4M,GAlCO,uCAAG,gDAAArL,EAAA,yDACvB1B,GAAa,GADU,cAIDnC,EAJC,qCAIegK,IAAkBC,iBAJjC,iCAIfC,EAJe,eAKOR,YAAeQ,GALtB,eAKfP,EALe,OAMf2D,EAAgB3D,EAAchN,KAAI,gBAAGyN,EAAH,EAAGA,gBAAH,OAAyBC,YAAWD,MANvD,UAeXiD,YAAe/K,EAASgL,EAAepD,GAf5B,iBAQnB3J,EARmB,EAQnBA,YACAI,EATmB,EASnBA,iBACAF,EAVmB,EAUnBA,gBACAH,EAXmB,EAWnBA,MACAI,EAZmB,EAYnBA,aACAF,EAbmB,EAanBA,qBACAyO,EAdmB,EAcnBA,iBAGEC,GACFC,GAAe,SAACC,GAAD,mBAAC,eACXA,GADU,IAEbH,mBACA1O,YAAa,IAAI4H,IAAU5H,GAC3BI,iBAAkB,IAAIwH,IAAUxH,GAChCF,gBAAiB,IAAI0H,IAAU1H,GAC/BC,aAAc,IAAIyH,IAAUzH,GAC5BF,qBAAsB,IAAI2H,IAAU3H,GACpCF,MAAO,IAAI6H,IAAU7H,QA1BJ,yBA8BrB6B,GAAa,GA9BQ,2EAAH,oDAmCpBkN,KAED,CAAC/M,EAAStC,EAAOmP,EAAgBD,EAAU/M,IAEvC,2BAAK2L,GAAZ,IAAyBzN,gB,0HCrErBiP,EAAQzT,IAAO0T,MAAV,mJAOE,qBAAGxT,MAAkBC,OAAOC,QAKnCuT,EAAkB3T,IAAOyM,IAAV,gIACV,qBAAGvM,MAAkBC,OAAOC,QAiBjCwT,EAAQ,SAACzS,GACb,OAAO,cAAC,IAAD,aAASyB,GAAG,KAAKC,MAAM,KAAKgR,GAAG,QAAW1S,KAuBpC2S,EApB2D,CACxEC,GAAIH,EACJI,GAAIJ,EACJK,GAAIL,EACJM,GAAIN,EACJO,GAAIP,EACJQ,GAAIR,EACJnJ,EAAG,SAACtJ,GACF,OAAO,cAAC,KAAD,aAAMyB,GAAG,IAAIiR,GAAG,QAAW1S,KAEpCuS,MAAOD,EACPY,GAAI,SAAClT,GACH,OAAO,cAACwS,EAAD,aAAiB/Q,GAAG,MAASzB,KAEtCmT,GAAI,SAACnT,GACH,OAAO,cAACwS,EAAD,aAAiB/Q,GAAG,MAASzB,KAEtCoT,IA7BUvU,IAAOuU,IAAV,iIACE,qBAAGrU,MAAkBC,OAAOC,SCnBxBuK,IAJuC,SAACxJ,GACrD,OAAO,cAAC,IAAD,aAAkBqT,cAAe,CAACC,KAAMC,WAAYZ,GAAwB3S","file":"static/js/8.5755d6ba.chunk.js","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React from 'react'\nimport { Box, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const { isLoading, total, cakeBalance, dexTokenVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\n    useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              dexTokenVaultBalance={dexTokenVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker } from 'components/DatePicker'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport BreadcrumbLink from '../components/BreadcrumbLink'\nimport { sendSnaphotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMIN_ADDRESS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = lazy(() => import('components/EasyMde'))\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useHistory()\n  const { library } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnaphotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      toastError(t('Error'), error?.message || error?.error)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(\n    () => ({\n      hideIcons: account === ADMIN_ADDRESS ? [] : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }),\n    [account],\n  )\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\n          <BreadcrumbLink to=\"/voting\">{t('Voting')}</BreadcrumbLink>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getBscScanLink(account, 'address')}>\n                      {truncateWalletAddress(account)}\n                    </LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n    </Container>\n  )\n}\n\nexport default CreateProposal\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMIN_ADDRESS, PANLILFLOKI_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'LilSwap', params: { symbol: 'LILFLOKI', address: getCakeAddress(), decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANLILFLOKI_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnaphotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    const power = new BigNumber(vote.metadata?.votingPower)\n    return accum.plus(power)\n  }, BIG_ZERO)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMIN_ADDRESS = '0x6eaf1b33b8672c5dc40aB8f4bA3A0111723126c7'\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANLILFLOKI_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst BreadcrumbLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.primaryBright};\n`\n\nexport default BreadcrumbLink\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: BigNumber\n  cakeBalance: BigNumber\n  dexTokenVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  dexTokenVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of LilFloki you held at the block detailed below. LilFloki held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {total.toFormat(3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual LilFloki Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto LilFloki Pool')}\n        </Text>\n        <Text textAlign=\"right\">{dexTokenVaultBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Pools')}\n        </Text>\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('LilFloki BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: BigNumber\n  dexTokenVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n  total: BigNumber\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: BIG_ZERO,\n  dexTokenVaultBalance: BIG_ZERO,\n  cakePoolBalance: BIG_ZERO,\n  poolsBalance: BIG_ZERO,\n  cakeBnbLpBalance: BIG_ZERO,\n  total: BIG_ZERO,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          dexTokenVaultBalance,\n          verificationHash,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: new BigNumber(cakeBalance),\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\n            cakePoolBalance: new BigNumber(cakePoolBalance),\n            poolsBalance: new BigNumber(poolsBalance),\n            dexTokenVaultBalance: new BigNumber(dexTokenVaultBalance),\n            total: new BigNumber(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: Table,\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n"],"sourceRoot":""}